/* 
See the NOTICE file distributed with this work for additional information
regarding copyright ownership.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Set minimum required Nextflow version, stopping execution if current version does not match
//nextflowVersion = '!>=24.01'

// Global default params, used in configs
params {
  // Input options
  csvFile = ''
  bam2cram = true
  mergeTissue = true
  stranded = true
  bam2bigWig = true
  ftpBaseUrl="ftp://ftp.sra.ebi.ac.uk/vol1/fastq"
  ncbiBaseUrl="https://api.ncbi.nlm.nih.gov/datasets/v2alpha/genome/accession/"
  cleanOutputDir = true
  max_intron_size = 100000  
  enscode = ''
  //bioperl = "${params.enscode}/bioperl-1.6.924"

  help = false
  cleanCache = false

  outDir=''
  cacheDir = "${params.outDir}/cache"
  files_latency = 60


}


// plugins
plugins {
    id "nf-schema@2.4.0"
//    id 'nf-validation@0.3.0'
}

validation {
    failUnrecognisedParams = true // default: false
    failOnMissingParams = true // default: false
    failOnInvalidParams = true // default: false
    enabled = true
    help {
      enabled = true
      description = 'Validate input parameters and provide help information.'
    }
//    validation.failUnrecognisedParams = true // default: false
  
}
//env {
//  ENSCODE = "${params.enscode}"
//  PERL5LIB = "${params.enscode}/ensembl/modules:${params.enscode}/ensembl-analysis/modules:${params.enscode}/ensembl-anno/:" +
//    "${params.enscode}/ensembl-io/modules:${params.bioperl}:$PERL5LIB"
//}

//scratch = ''
workDir = ''

conda.enabled = true

singularity {
  enabled = true
  autoMounts = true
  pullTimeout = '1 hour'
}

profiles {

  standard {
    executor {
      name = 'lsf'
      perJobMemLimit = true
      queueSize = 2000
      submitRateLimit = "10/1sec"
      queueGlobalStatus = true
      exitReadTimeout = "30 min"
    }

    process {
      queue = 'production'
    }
  }

  slurm {
    executor {
      name = 'slurm'
      submitRateLimit = "10/1sec"
      queueGlobalStatus = true
      exitReadTimeout = "30 min"
    }

    process {
      clusterOptions = '-t 5:00:00 -e errlog.txt'
    }
  }

  local {
    process.executor = 'local'
  }

}

process {
  errorStrategy = "retry"
  maxRetries = 3
  cache = 'lenient'

  withLabel: 'default' {
    cpus = 1
    memory = { 6.GB * task.attempt }
    time = { 1.h * task.attempt }
    afterScript = { "sleep 60" }
    //storeDir = { "${params.outDir}/cache/${task.process.tokenize(':')[-1].toLowerCase()}/${task.tag}" }
  }

  withLabel: 'fetch_file' {
    cpus = 1
    memory = { 8.GB * task.attempt }
    time = { 2.h * task.attempt }
  }
  withLabel: 'python' { 
    memory = { 10.GB * task.attempt }
    time = { 10.h * task.attempt }
    //module = 'singularity-3.7.0-gcc-9.3.0-dp5ffrp'
    //container = 'python:3.9.19'
  }

  withLabel: 'star' {
    cpus = 30
    memory = { 45.GB * task.attempt }
    time = { 10.h * task.attempt }
    module = 'singularity-3.7.0-gcc-9.3.0-dp5ffrp'
    container = 'ebileanne/star:latest'
  }
  withLabel: 'samtools' {
    cpus=20
    memory = { 10.GB * task.attempt }
    time = { 4.h * task.attempt }
    module = 'singularity-3.7.0-gcc-9.3.0-dp5ffrp'
    container = "mgibio/samtools:1.15.1-buster"
  }
  withLabel: 'minimap2' {
    cpus=20
    memory = { 10.GB * task.attempt }
    time = { 4.h * task.attempt }
    module = 'singularity-3.7.0-gcc-9.3.0-dp5ffrp'
    container = "staphb/minimap2:latest"
  }
  withLabel: 'bamCoverage' {
    cpus=20
    memory = { 10.GB * task.attempt }
    time = { 4.h * task.attempt }
    module = 'singularity-3.7.0-gcc-9.3.0-dp5ffrp'
    container = "ctomlins/bamcoverage:latest"
  }
}
trace {
    enabled = true
    file = 'resource_trace.txt'
    overwrite = true
    fields = 'task_id,name,process,hash,status,exit,attempt,submit,time,realtime,cpus,%cpu,memory,%mem'
}

